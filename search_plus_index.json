{"./":{"url":"./","title":"简介","keywords":"","body":"How To Gitbook | Gitbook 快速上手指南 欢迎阅读本书，这本书是一本从入门到精通的 Gitbook 电子书，帮助你借助 Gitbook ，实现自己的电子书写作梦想，如果你在阅读的过程中，遇见任何问题，都可以点击左侧列表中的「Github」，前往 Github 提交 issue 反馈。 本书目录 什么是 Gitbook Gitbook 都拥有哪些功能 Gitbook 与 LeanPub、KanCloud 的对比 安装 Gitbook 编写 Gitbook 文章 发布 Gitbook "},"intro/intro.html":{"url":"intro/intro.html","title":"什么是 GitBook","keywords":"","body":"什么是 Gitbook Gitbook 是一个2014年发起的开源项目工具，可以用来构建项目的文档。 如今意义上的 Gitbook 实际上可以分为两个部分 Gitbook.com Gitbook 开源项目 前者为 GitBook 开发团队维护的 SaaS 平台，为用户提供了在线的文档托管能力，以及 Algolia 搜索、数据分析等功能。后者则是我们要用来编写电子书的工具。 实际上，由于 Gitbook 本身是一个开源项目，我们也并不需要一定要使用 Gitbook.com 才能部署我们自己的电子书，只要我们有一个支持 HTML 托管的网站空间就足以部署我们自己的电子书了（比如，本书就是基于 Github Pages 进行部署的）。 想要使用 Gitbook ，你需要在你的电脑上安装一些工具，并掌握一门文本标记语言 —— Markdown，不过，不用担心，这些内容我会在这本电子书内完完全全的介绍给你。 "},"intro/features.html":{"url":"intro/features.html","title":"GitBook 拥有哪些功能","keywords":"","body":"Gitbook 拥有哪些功能？ 作为一个电子书编写工具，甚至可以为此而写一本电子书的编写工具， Gitbook 到底有哪些功能值得我们去介绍呢？ 支持 Markdown 或者 AsciiDoc 编写内容 输出电子书为网站或电子书文件（PDF、epub、mobi） 多语言支持 词汇表/词典的支持 封面支持 自定义变量及模板支撑 内容引用 插件 漂亮的默认主题 可以看到 Gitbook 的功能并不算少，而你想要玩转这些功能，更是要好好研究一番了。不过好在，这本电子书就是要来帮助你更好的使用 Gitbook 的。 "},"intro/requirements.html":{"url":"intro/requirements.html","title":"Gitbook 的依赖","keywords":"","body":"Gitbook 的依赖 Gitbook 是基于 Node.js 编写的，因此，你的操作系统需要支持 Node.js 。 Node.js 安装 Windows 安装方法：前往下载页面，下载对应的 Installer Linux 安装方法：使用包管理器安装 macOS 安装方法：使用 Homebrew 来安装，执行 brew install nodejs Markdown 编辑器 Markdown 是一种文本标记语言，因此，使用文本编辑器就可以直接修改了。推荐你使用 VSCode 或 Sublime Text来编写。 不过，如果你还是一个初学者，我推荐你使用专门的 Markdown 编辑器来编写，会更加的友好。这里，我向你推荐Typora,Typora 是一款全功能的 Markdown 编辑器，非常的方便，而且提供了 Windows、 Linux、macOS 三种系统的安装包，方便你的使用。 "},"intro/compare.html":{"url":"intro/compare.html","title":"Gitbook 和其他电子书工具的对比","keywords":"","body":"Gitbook 和其他电子书工具的对比 特性 Gitbook LeanPub KanCloud 开发商 海外 海外 国内 开源 是 否 否 单独部署 是 否 否 付费阅读 否 是 是 "},"usage/install.html":{"url":"usage/install.html","title":"安装 GitBook","keywords":"","body":"安装 Gitbook 接下来，我们来说一下如何安装 Gitbook 安装 Node.js Gitbook 使用 node.js 构建，因此，你需要安装好 Node.js Node.js 提供了非常全面的安装包和教程，你可以直接访问Node.js 官网进行安装。 安装 Calibre Calibre 可以帮助 Gitbook 输出 epub 、pdf 和 mobi 电子书文件，因此也推荐你先安装好 Calibre 。 访问Calibre官网，点击菜单栏中的Download，即可进入到下载页面，下载对应的软件即可。 安装 Gitbook 当你完成了上述两款软件的安装后，再安装 Gitbook 就非常简单了。打开系统的终端软件(Windows 使用 CMD 或 PowerShell)，执行如下命令。 npm install gitbook-cli -g "},"toolschain/travis-ci.html":{"url":"toolschain/travis-ci.html","title":"Travis CI 自动发布 Github Pages","keywords":"","body":"使用 Travis CI 构建 Gitbook HTML 为什么要使用 Travis CI 构建 Gitbook 为你的项目接入 Travis CI 后，可以实现你的项目完全在线自动部署，无论你在任何的地方，只要能够接入到互联网，访问到 Github ，就可以更新你的电子书，同时使其自动发布到 Github 上。 特别是你的电子书需要和一些非技术类同学协作时， 借助 Gitbook ，他可以只通过浏览器对电子书进行修改，无需在自己的电脑上配置 Gitbook 环境。 配置步骤 创建 .travis.yml 文件 Travis CI 的构建是基于 .travis.yml 文件进行的，因此，为了让 Travis CI 能够正常构建，我们先来创建 .travis.yml。 访问你的 Github 项目主页，点击其中的 Create new File， 在弹出的界面中填入文件名.travis.yml 并粘贴如下代码： language: node_js node_js: - \"8\" cache: directories: - $HOME/.npm before_install: - export TZ='Asia/Shanghai' install: - npm install gitbook-cli -g - gitbook install script: - gitbook build . ./build branches: only: - master deploy: provider: pages skip_cleanup: true github_token: $GITHUB_TOKEN local_dir: build on: branch: master 添加完成后，选择 commit new file 即可。 配置 Travis CI 如果你想要借助 Travis CI 来构建，除了创建配置文件外，还需要使用你的 Github 账号登录 Travis CI，进行一些简单的配置。 访问 Travis CI 官网，使用 Github 登录。 登录后，点击右上角的用户头像，在弹出的下拉窗口中选择 Settings 在下方的 Repository 列表中找到你的项目 点击项目后的 Settings,进入到项目的界面。 在项目界面中找到 More Options，选择其中的 Settings， 进入到项目设置界面。 在下方的Environment Variables中添加一个新的名为GITHUB_TOKEN 的环境变量，，将你自己的 Personal Access Token 填入其中，用于后续的 Github Pages 自动上传。 [danger] 安全须知 请不要将 Token 告诉他人，以免他人使用你的 Token 修改你的项目 添加完成后，再次点击 More Options ，选择其中的 Trigger Build。 在弹出的界面中直接点击按钮开始构建 随后，你就可以等待 Travis CI 的自动构建了 稍等片刻，当你发现 Travis CI 的构建变成绿色后，就说明已经构建完成了。 此时，回到 Github ，点击界面中的 Branch，就可以看到所有的分支了，此时可以看到，已经有了 gh-pages 分支，则说明目前我们的 Gitbook 已经构建完成了。 此时，你可以访问 .github.io/ 来查看构建好的电子书，比如这本书的地址就是 https://bestony.github.io/gitbook-guide/ "}}